<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{05E64D56-549C-3F9C-965A-AA06ECE7AFDC}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\KFrame\Frame\trunk\KFLibrary\libgit2\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/KFrame/Frame/trunk/KFLibrary/libgit2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/KFrame/Frame/trunk/KFLibrary/libgit2 -BD:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild --check-stamp-file D:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\AddCFlagIfSupported.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\EnableWarnings.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPkgLibraries.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindStatNsec.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\IdeSplitSources.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCCompilerFlag.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCXXSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckPrototypeDefinition.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckStructHasMember.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FeatureSummary.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindThreads.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/KFrame/Frame/trunk/KFLibrary/libgit2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/KFrame/Frame/trunk/KFLibrary/libgit2 -BD:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild --check-stamp-file D:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\AddCFlagIfSupported.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\EnableWarnings.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPkgLibraries.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindStatNsec.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\IdeSplitSources.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCCompilerFlag.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCXXSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckPrototypeDefinition.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckStructHasMember.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FeatureSummary.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindThreads.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/KFrame/Frame/trunk/KFLibrary/libgit2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/KFrame/Frame/trunk/KFLibrary/libgit2 -BD:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild --check-stamp-file D:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\AddCFlagIfSupported.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\EnableWarnings.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPkgLibraries.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindStatNsec.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\IdeSplitSources.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCCompilerFlag.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCXXSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckPrototypeDefinition.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckStructHasMember.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FeatureSummary.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindThreads.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/KFrame/Frame/trunk/KFLibrary/libgit2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/KFrame/Frame/trunk/KFLibrary/libgit2 -BD:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild --check-stamp-file D:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\AddCFlagIfSupported.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\EnableWarnings.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPkgLibraries.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindStatNsec.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\IdeSplitSources.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCCompilerFlag.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCXXSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckPrototypeDefinition.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckStructHasMember.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FeatureSummary.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindThreads.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\ZERO_CHECK.vcxproj">
      <Project>{11BB8411-F327-3518-ADDF-84929CDA885A}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\src\git2.vcxproj">
      <Project>{483155AF-CD10-3D2F-9484-272FB4DE5B76}</Project>
      <Name>git2</Name>
    </ProjectReference>
    <ProjectReference Include="D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\src\git2internal.vcxproj">
      <Project>{1EAD4CBE-C78F-3440-8E36-CB0933EB3791}</Project>
      <Name>git2internal</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\http-parser\http-parser.vcxproj">
      <Project>{FA10973F-241D-3B42-AE2E-AD8EA09B4E4B}</Project>
      <Name>http-parser</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\pcre\pcre.vcxproj">
      <Project>{2AA6D44F-EFFD-37E8-9001-28B3E63B8CBD}</Project>
      <Name>pcre</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\zlib\zlib.vcxproj">
      <Project>{812E7F71-0BF8-3584-8CD4-638A1C670EA2}</Project>
      <Name>zlib</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>