<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{11BB8411-F327-3518-ADDF-84929CDA885A}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\53900023f3d55ef25d320884764b7b51\generate.stamp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/KFrame/Frame/trunk/KFLibrary/libgit2 -BD:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild/libgit2.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\AddCFlagIfSupported.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\EnableWarnings.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindGSSAPI.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPCRE.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPkgLibraries.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindStatNsec.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindmbedTLS.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\IdeSplitSources.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\PkgBuildConfig.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SanitizeBool.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectGSSAPI.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectHTTPSBackend.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectHashes.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\http-parser\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\pcre\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\pcre\config.h.in;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\zlib\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\src\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\src\features.h.in;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\CheckTypeSize\LONG_LONG.c;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\CheckTypeSize\UNSIGNED_LONG_LONG.c;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCCompilerFlag.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCXXSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.c;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.c.in;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFileCXX.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckPrototypeDefinition.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckStructHasMember.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckTypeSize.c.in;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckTypeSize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FeatureSummary.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindOpenSSL.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindThreads.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindZLIB.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\SelectLibraryConfigurations.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\src\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\pcre\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\http-parser\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\zlib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/KFrame/Frame/trunk/KFLibrary/libgit2 -BD:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild/libgit2.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\AddCFlagIfSupported.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\EnableWarnings.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindGSSAPI.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPCRE.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPkgLibraries.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindStatNsec.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindmbedTLS.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\IdeSplitSources.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\PkgBuildConfig.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SanitizeBool.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectGSSAPI.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectHTTPSBackend.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectHashes.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\http-parser\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\pcre\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\pcre\config.h.in;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\zlib\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\src\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\src\features.h.in;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\CheckTypeSize\LONG_LONG.c;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\CheckTypeSize\UNSIGNED_LONG_LONG.c;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCCompilerFlag.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCXXSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.c;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.c.in;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFileCXX.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckPrototypeDefinition.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckStructHasMember.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckTypeSize.c.in;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckTypeSize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FeatureSummary.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindOpenSSL.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindThreads.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindZLIB.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\SelectLibraryConfigurations.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\src\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\pcre\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\http-parser\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\zlib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/KFrame/Frame/trunk/KFLibrary/libgit2 -BD:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild/libgit2.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\AddCFlagIfSupported.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\EnableWarnings.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindGSSAPI.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPCRE.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPkgLibraries.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindStatNsec.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindmbedTLS.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\IdeSplitSources.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\PkgBuildConfig.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SanitizeBool.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectGSSAPI.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectHTTPSBackend.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectHashes.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\http-parser\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\pcre\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\pcre\config.h.in;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\zlib\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\src\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\src\features.h.in;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\CheckTypeSize\LONG_LONG.c;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\CheckTypeSize\UNSIGNED_LONG_LONG.c;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCCompilerFlag.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCXXSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.c;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.c.in;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFileCXX.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckPrototypeDefinition.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckStructHasMember.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckTypeSize.c.in;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckTypeSize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FeatureSummary.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindOpenSSL.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindThreads.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindZLIB.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\SelectLibraryConfigurations.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\src\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\pcre\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\http-parser\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\zlib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/KFrame/Frame/trunk/KFLibrary/libgit2 -BD:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/KFrame/Frame/trunk/KFLibrary/libgit2/vsbuild/libgit2.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\AddCFlagIfSupported.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\EnableWarnings.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindGSSAPI.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPCRE.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindPkgLibraries.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindStatNsec.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\FindmbedTLS.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\IdeSplitSources.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\PkgBuildConfig.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SanitizeBool.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectGSSAPI.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectHTTPSBackend.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\cmake\SelectHashes.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\http-parser\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\pcre\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\pcre\config.h.in;D:\KFrame\Frame\trunk\KFLibrary\libgit2\deps\zlib\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\src\CMakeLists.txt;D:\KFrame\Frame\trunk\KFLibrary\libgit2\src\features.h.in;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\CheckTypeSize\LONG_LONG.c;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\CheckTypeSize\UNSIGNED_LONG_LONG.c;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCCompilerFlag.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckCXXSourceCompiles.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.c;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.c.in;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckIncludeFileCXX.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckPrototypeDefinition.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckStructHasMember.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckTypeSize.c.in;D:\Program Files\CMake\share\cmake-3.17\Modules\CheckTypeSize.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FeatureSummary.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindOpenSSL.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindThreads.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\FindZLIB.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;D:\Program Files\CMake\share\cmake-3.17\Modules\SelectLibraryConfigurations.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\src\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\pcre\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\http-parser\CMakeFiles\generate.stamp;D:\KFrame\Frame\trunk\KFLibrary\libgit2\vsbuild\deps\zlib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>